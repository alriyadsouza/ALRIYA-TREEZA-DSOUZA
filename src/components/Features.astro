---
import Card from './Card.astro'

const featuresData = [
  {title: 'Jewel Heist', body: ' Who will be the first to find the stolen jewels? In order to crack the case, your team will need to quickly uncover the hidden clues and then solve a series of brain teasers that require collaboration, creative problem solving, and thinking outside the box..'},
  {title: 'The Mummy’s Curse', body: ' Uncover the secrets of Ancient Egypt to retrieve the talisman and lift the mummy’s curse! Using mysterious items provided, your team will be challenged to strategize, problem solve, and communicate as you solve a series of puzzles… before time runs out.'},
  {title: 'Zombie Apocalypse', body: 'Set up an escape room scenario where participants must escape a city overrun by zombies. The room can be designed to look like a city street, with obstacles and challenges that simulate a zombie apocalypse, such as barricading doors, finding weapons, and avoiding zombie traps.'},
  {title: 'Outbreak', body: 'Participants are quarantined in a laboratory after a viral outbreak and must work together to find a cure and escape before time runs out. The room can be designed to look like a laboratory, with puzzles and challenges that require scientific knowledge and problem-solving skills, such as decoding a virus sequence, mixing chemicals to create an antidote, and unlocking secure doors.'},
  {title: 'Wilderness Survival', body: 'Set up an escape room scenario where participants must escape a city overrun by zombies. The room can be designed to look like a city street, with obstacles and challenges that simulate a zombie apocalypse, such as barricading doors, finding weapons, and avoiding zombie traps.'},
  {title: 'Ship Wrecked', body: 'Set up an escape room scenario where participants must escape a city overrun by zombies. The room can be designed to look like a city street, with obstacles and challenges that simulate a zombie apocalypse, such as barricading doors, finding weapons, and avoiding zombie traps.'}
];
---

<section class="features"> 
  <br>
  <div class="container">
   {featuresData.map(feature => (
      <Card>
        <h3>{feature.title}</h3>
        <p>{feature.body}</p>
      </Card>
    ))}
  </div>
</section>

<style>
  .features .container {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 20px;
    padding: 0 20px;
    margin: 30px auto;
  }

  @media (max-width: 500px) {
  .features .container {
    grid-template-columns: 1fr;
  }
}

</style>